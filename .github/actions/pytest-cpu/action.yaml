name: Pytest GPU
description: A composite action to run Pytest in a GPU environment
inputs:
  container:
    required: true
    type: string
    description: 'Docker container to use'
  gha-timeout:
    required: false
    type: number
    default: 60
    description: 'GitHub Action timeout'
  git-repo:
    required: true
    type: string
    description: 'Git repository to clone'
  name:
    required: true
    type: string
    description: 'Job name'
  pip-deps:
    required: true
    type: string
    description: 'Python dependencies to install'
  pytest-command:
    required: true
    type: string
    description: 'Pytest command to run'
  pytest-markers:
    required: true
    type: string
    description: 'Markers for pytest'
  python-version:
    required: false
    type: string
    default: '3.9'
    description: 'Python version to use'
  mcloud-timeout:
    required: false
    type: number
    default: 2700
    description: 'MosaicML cloud timeout'
  composer-package-name:
    required: false
    type: string
    description: 'The composer package name'
  git-ssh-clone:
    required: false
    type: boolean
    default: false
    description: 'Use SSH to clone the repository'
  gpu-num:
    required: true
    type: number
    description: 'Number of GPUs to use'
  mcloud-api-key:
    required: true
    type: string
    description: 'MosaicML API key'
  slack-notifications-bot-token:
    required: false
    type: string
    description: 'Slack notifications bot token'
  code-eval-device:
    required: false
    type: string
    description: 'Code evaluation device'
  code-eval-url:
    required: false
    type: string
    description: 'Code evaluation URL'
  code-eval-apikey:
    required: false
    type: string
    description: 'Code evaluation API key'

runs:
  using: 'composite'
  steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Set Environment Variables
      shell: bash
      run: |
        export MOSAICML_API_KEY='${{ inputs.mcloud-api-key }}'
        export SLACK_NOTIFICATIONS_BOT_TOKEN='${{ inputs.slack-notifications-bot-token }}'
        export CODE_EVAL_DEVICE='${{ inputs.code-eval-device }}'
        export CODE_EVAL_URL='${{ inputs.code-eval-url }}'
        export CODE_EVAL_APIKEY='${{ inputs.code-eval-apikey }}'

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-

    - name: Setup MCLI
      shell: bash
      run: |
        set -ex
        python -m pip install mosaicml-cli
        mcli version

    - name: Submit Run
      id: tests
      shell: bash
      run: |
        set -ex

        PR_NUMBER="$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")"
        REF_ARGS=""

        # Use the PR number if it exists, commit SHA for protected branches and the branch name otherwise
        if [ -z "$PR_NUMBER" ] || [ "$PR_NUMBER" = "null" ]; then
          if [[ "$GITHUB_REF" =~ "refs/heads/dev" || "$GITHUB_REF" =~ "refs/heads/main" || \
            "$GITHUB_REF" =~ "refs/heads/release" ]]; then
            REF_ARGS="--git_commit $GITHUB_SHA"
          else
            REF_ARGS="--git_branch $GITHUB_REF_NAME"
          fi
        else
          REF_ARGS="--pr_number $PR_NUMBER"
        fi

        python .github/mcli/mcli_pytest.py \
          --image '${{ inputs.container }}' \
          --git_repo '${{ inputs.git-repo }}' \
          --pip_deps '${{ inputs.pip-deps }}' \
          --pip_package_name '${{ inputs.composer-package-name }}' \
          --pytest_markers '${{ inputs.pytest-markers }}' \
          --pytest_command '${{ inputs.pytest-command }}' \
          --timeout ${{ inputs.mcloud-timeout }} \
          --gpu_num ${{ inputs.gpu-num }} \
          --git_ssh_clone ${{ inputs.git-ssh-clone }} \
          ${REF_ARGS}
