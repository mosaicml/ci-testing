name: Pytest CPU
inputs:
  composer-package-name:
    required: false
    type: string
  container:
    required: true
    type: string
  name:
    required: true
    type: string
  pip-deps:
    required: true
    type: string
  pytest-command:
    required: true
    type: string
  pytest-markers:
    required: true
    type: string
  pytest-wandb-entity:
    required: false
    type: string
  pytest-wandb-project:
    required: false
    type: string
  safe-directory:
    required: true
    type: string
  wandb-api-key:
    required: false
  aws-access-key-id:
    required: false
  aws-secret-access-key:
    required: false
  slack-notifications-bot-token:
    required: false
  code-eval-device:
    required: false
  code-eval-url:
    required: false
  code-eval-apikey:
    required: false
  gcs-key:
    required: false
  gcs-secret:
    required: false
  azure-account-name:
    required: false
  azure-account-access-key:
    required: false
runs:
  using: composite
  steps:
  - name: Setup
    shell: bash
    run: |
      set -ex
      export PATH=/composer-python:$PATH
      export COMPOSER_PACKAGE_NAME='${{ inputs.composer_package_name }}'
      python -m pip install --upgrade 'pip<23' wheel
      python -m pip install --upgrade .${{ inputs.pip_deps }}
  - name: Run Tests
    id: tests
    shell: bash
    run: |
      set -ex
      export PATH=/composer-python:$PATH
      export WANDB_API_KEY='${{ inputs.wandb-api-key }}'
      export WANDB_ENTITY='${{ inputs.pytest-wandb-entity }}'
      export WANDB_PROJECT='${{ inputs.pytest-wandb-project }}'
      export AWS_ACCESS_KEY_ID='${{ inputs.aws-access-key-id }}'
      export AWS_SECRET_ACCESS_KEY='${{ inputs.aws-secret-access-key }}'
      export CODE_EVAL_DEVICE='${{ inputs.code-eval-device }}'
      export CODE_EVAL_URL='${{ inputs.code-eval-url }}'
      export CODE_EVAL_APIKEY='${{ inputs.code-eval-apikey }}'
      export GCS_KEY='${{ inputs.gcs-key }}'
      export GCS_SECRET='${{ inputs.gcs-secret }}'
      export AZURE_ACCOUNT_NAME='${{ inputs.azure-account-name }}'
      export AZURE_ACCOUNT_ACCESS_KEY='${{ inputs.azure-account-access-key }}'
      export COMMON_ARGS="-v --durations=20 -m '${{ inputs.pytest-markers }}' -o tmp_path_retention_policy=failed"

      # Necessary to run git diff for doctests
      git config --global --add safe.directory /__w/${{ inputs.safe_directory }}/${{ inputs.safe-directory }}
      make test PYTEST='${{ inputs.pytest-command }}' EXTRA_ARGS="$COMMON_ARGS --codeblocks"
      make test-dist PYTEST='${{ inputs.pytest-command }}' EXTRA_ARGS="$COMMON_ARGS" WORLD_SIZE=2

      python -m coverage combine
  - uses: actions/upload-artifact@v3
    with:
      name: coverage-${{ github.sha }}-${{ inputs.name }}
      path: .coverage
